# Generated by Django 4.0.3 on 2022-03-19 20:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for given Coupon and its discount', primary_key=True, serialize=False)),
                ('totalDiscount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cust_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('delivery_id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this specific order-delivery information', primary_key=True, serialize=False)),
                ('street_address', models.CharField(max_length=250)),
                ('street_address2', models.CharField(blank=True, help_text='Apt number, building, etc.', max_length=250, null=True)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('zipCode', models.CharField(max_length=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='mavSlice.delivery')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('pay_id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for User Billing Info', primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Toppings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Pepperoni', 'Pepperoni'), ('Beef', 'Beef'), ('Italian Sausage', 'Italian Sausage'), ('Canadian Bacon', 'Canadian Bacon'), ('Bacon', 'Bacon'), ('Chicken', 'Chicken'), ('Green Pepper', 'Green Pepper'), ('Jalapeno', 'Jalapeno'), ('Onion', 'Onion'), ('Banana Pepper', 'Banana Pepper'), ('Black Olive', 'Black Olive'), ('None', 'None')], default='None', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for a Product', primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Slice', 'Slice'), ('Whole Pie', 'Whole Pie')], default='Whole Pie', max_length=10)),
                ('name', models.CharField(choices=[('Cheese', 0), ('Pepperoni', 1), ('Beef', 1), ('Italian Sausage', 1), ('Canadian Bacon', 1), ('Chicken Alfredo', 2), ('Supreme', 5), ('Meat Lovers', 5), ('Philly', 5), ('BBQ Chicken', 3)], default='Cheese', max_length=20)),
                ('sauce', models.CharField(choices=[('Classic Marinara', 'Classic Marinara'), ('Garlic Parm', 'Garlic Parm'), ('Buffalo', 'Buffalo'), ('BBQ', 'BBQ'), ('None', 'None')], default='Classic Marinara', max_length=16)),
                ('price', models.DecimalField(decimal_places=2, default=(('Slice', 'Slice'), ('Whole Pie', 'Whole Pie')), max_digits=4)),
                ('coupon', models.ManyToManyField(blank=True, to='mavSlice.coupon')),
                ('toppings', models.ManyToManyField(blank=True, to='mavSlice.toppings')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for a specific Order', primary_key=True, serialize=False)),
                ('coupon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mavSlice.coupon')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mavSlice.customer')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mavSlice.delivery')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mavSlice.payment')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='delivery_info',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='mavSlice.delivery'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
